import{G as m,B as n,M as c,ar as u,s as y,L as _,n as l}from"./TriangleSplitter-ByAGyBL2.js";class g extends m{get color(){return this._mesh.material.color}get side(){return this._mesh.material.side}set side(s){this._mesh.material.side=s}constructor(s=[]){super();const r=new n,e=new n;this._mesh=new c(r,new u({flatShading:!0,transparent:!0,opacity:.25,depthWrite:!1})),this._lines=new y(e,new _),this._mesh.material.color=this._lines.material.color,this._lines.frustumCulled=!1,this._mesh.frustumCulled=!1,this.add(this._lines,this._mesh),this.setTriangles(s)}setTriangles(s){const r=new Float32Array(9*s.length),e=new Float32Array(18*s.length);for(let o=0,h=s.length;o<h;o++){const a=9*o,i=18*o,t=s[o];t.a.toArray(r,a+0),t.b.toArray(r,a+3),t.c.toArray(r,a+6),t.a.toArray(e,i+0),t.b.toArray(e,i+3),t.b.toArray(e,i+6),t.c.toArray(e,i+9),t.c.toArray(e,i+12),t.a.toArray(e,i+15)}this._mesh.geometry.dispose(),this._mesh.geometry.setAttribute("position",new l(r,3)),this._lines.geometry.dispose(),this._lines.geometry.setAttribute("position",new l(e,3))}}export{g as T};
