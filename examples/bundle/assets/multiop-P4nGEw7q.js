import{W as M,e as b,S as C,D as v,A as E,P as z,O as I,b as P,a as O,I as R,C as T,M as m,f as W,g as A}from"./TriangleSplitter-ByAGyBL2.js";import{l as D}from"./debugUtils-Cp__LyS1.js";import{E as N,B as x,S as B,I as G,A as H,R as L}from"./Evaluator-Coej1Gnr.js";window.logTriangleDefinitions=D;let a,i,s,t,r,l,w,c,h,o,g,d,f,e,S;j();async function j(){a=new M({antialias:!0}),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),a.setClearColor(1380364,1),a.shadowMap.enabled=!0,a.shadowMap.type=b,document.body.appendChild(a.domElement),s=new C,o=new v(16777215,3.5),o.position.set(0,2,0),o.castShadow=!0,s.add(o,o.target),s.add(new E(15094016,.25));const p=o.shadow.camera;o.castShadow=!0,o.shadow.mapSize.setScalar(4096),o.shadow.bias=1e-5,o.shadow.normalBias=.01,p.left=p.bottom=-5,p.right=p.top=5,p.updateProjectionMatrix(),i=new z(75,window.innerWidth/window.innerHeight,.1,50),i.position.set(0,7,6),i.far=100,i.updateProjectionMatrix(),new I(i,a.domElement),g=new N,g.attributes=["position","normal"],d=new P,d.side=O,d.roughness=.9,d.color.set(16775393),f=d.clone(),f.color.set(16750592),e=d.clone(),e.opacity=.15,e.transparent=!0,e.depthWrite=!1,e.polygonOffset=!0,e.polygonOffsetFactor=.2,e.polygonOffsetUnits=.2,e.premultipliedAlpha=!0,S=e.clone(),S.color.copy(f.color),t=new x(new R(1,1),e),t.geometry.computeVertexNormals(),t.castShadow=!0,r=new x(new T(.5,.5,2.5),S),r.castShadow=!0,s.add(t,r),l=new m,l.castShadow=!0,l.receiveShadow=!0,w=new m,w.castShadow=!0,w.receiveShadow=!0,c=new m,c.castShadow=!0,c.receiveShadow=!0,h=new m,h.castShadow=!0,h.receiveShadow=!0,s.add(l,w,c,h);const u=new m(new W,new A({color:15094016,transparent:!0,opacity:.075}));u.rotation.x=-Math.PI/2,u.position.y=-2,u.scale.setScalar(50),u.receiveShadow=!0,s.add(u),window.addEventListener("resize",function(){i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),a.setSize(window.innerWidth,window.innerHeight)},!1),y()}function y(){requestAnimationFrame(y);const n=window.performance.now()+9e3;t.rotation.x=n*1e-4,t.rotation.y=n*25e-5,t.rotation.z=n*5e-4,r.rotation.x=n*-2e-4,r.rotation.y=n*-5e-4,r.rotation.z=n*-.001,t.updateMatrixWorld(),r.updateMatrixWorld(),t.material=d,r.material=f,g.evaluate(t,r,[B,G,H,L],[l,w,c,h]),l.position.x=-3.5,l.position.z=3.5,w.position.x=3.5,w.position.z=3.5,c.position.x=-3.5,c.position.z=-3.5,h.position.x=3.5,h.position.z=-3.5,t.material=e,r.material=S,a.render(s,i)}
