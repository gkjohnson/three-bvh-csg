import{W as K,e as _,S as q,D as $,A as J,P as Q,O as X,k as O,a as H,F as I,M as F,B as Y,b as Z,c as ee,o as ae,i as C,p as te,C as re,h as oe,n as se}from"./TriangleSplitter-ByAGyBL2.js";import{g as ne}from"./lil-gui.module.min-BH_YJbPT.js";import{T as ie}from"./TransformControls-CbZU_T1b.js";import{G as le,M as de}from"./meshopt_decoder.module-DK5bP9_f.js";import{E as pe,M as D}from"./EdgesHelper-uoMJ4-z_.js";import{l as ue}from"./debugUtils-Cp__LyS1.js";import{E as me,B as k,S as N,a as W,H as R,D as he,I as ce,R as ge,A as fe}from"./Evaluator-Coej1Gnr.js";import{G as U}from"./GridMaterial-CluEDJjd.js";import{T as we}from"./TriangleSetHelper-CUowG-cC.js";window.logTriangleDefinitions=ue;const e={brush1Shape:"box",brush1Complexity:1,brush1Color:"#ffffff",brush2Shape:"sphere",brush2Complexity:1,brush2Color:"#E91E63",operation:N,wireframe:!1,displayBrushes:!0,displayControls:!0,shadows:!0,vertexColors:!1,flatShading:!1,gridTexture:!1,useGroups:!0,enableDebugTelemetry:!0,displayIntersectionEdges:!1,displayTriangleIntersections:!1,displayBrush1BVH:!1,displayBrush2BVH:!1};let p,w,u,d,V,L,h,r,a,g,A,c,P,T,B,x,M,v,S=!0,b;const m=new Map;be();async function be(){V=document.getElementById("output"),p=new K({antialias:!0}),p.setPixelRatio(window.devicePixelRatio),p.setSize(window.innerWidth,window.innerHeight),p.setClearColor(1118481,1),p.shadowMap.enabled=!0,p.shadowMap.type=_,document.body.appendChild(p.domElement),u=new q,c=new $(16777215,3.5),c.position.set(-1,2,3),u.add(c,c.target),u.add(new J(11583173,.35));const f=c.shadow.camera;c.castShadow=!0,c.shadow.mapSize.setScalar(4096),c.shadow.bias=1e-5,c.shadow.normalBias=.01,f.left=f.bottom=-2.5,f.right=f.top=2.5,f.updateProjectionMatrix(),w=new Q(75,window.innerWidth/window.innerHeight,.1,50),w.position.set(1,2,4),w.far=100,w.updateProjectionMatrix(),L=new X(w,p.domElement),h=new ie(w,p.domElement),h.setSize(.75),h.addEventListener("dragging-changed",t=>{L.enabled=!t.value}),h.addEventListener("objectChange",()=>{S=!0}),u.add(h.getHelper()),b=new me,b.attributes=["position","normal"],r=new k(new O,new U),a=new k(new O,new U),a.position.set(-.75,.75,0),a.scale.setScalar(.75),E(r,e.brush1Shape,e.brush1Complexity),E(a,e.brush2Shape,e.brush2Complexity),r.material.opacity=.15,r.material.transparent=!0,r.material.depthWrite=!1,r.material.polygonOffset=!0,r.material.polygonOffsetFactor=.2,r.material.polygonOffsetUnits=.2,r.material.side=H,r.material.premultipliedAlpha=!0,a.material.opacity=.15,a.material.transparent=!0,a.material.depthWrite=!1,a.material.polygonOffset=!0,a.material.polygonOffsetFactor=.2,a.material.polygonOffsetUnits=.2,a.material.side=H,a.material.premultipliedAlpha=!0,a.material.roughness=.25,a.material.color.set(15277667),r.receiveShadow=!0,a.receiveShadow=!0,h.attach(a),u.add(r,a);let o;o=r.material.clone(),o.side=I,o.opacity=1,o.transparent=!1,o.depthWrite=!0,m.set(r.material,o),o=a.material.clone(),o.side=I,o.opacity=1,o.transparent=!1,o.depthWrite=!0,m.set(a.material,o),m.forEach((t,l)=>{t.enableGrid=e.gridTexture,l.enableGrid=e.gridTexture}),g=new F(new Y,new Z({flatShading:!1,polygonOffset:!0,polygonOffsetUnits:.1,polygonOffsetFactor:.1})),g.castShadow=!0,g.receiveShadow=!0,P=g.material,u.add(g),A=new F(g.geometry,new ee({wireframe:!0,color:0,opacity:.15,transparent:!0})),u.add(A),T=new pe,T.color.set(15277667),u.add(T),B=new we,B.color.set(48340),u.add(B),x=new D(r,20),M=new D(a,20),u.add(x,M),x.update(),M.update(),v=(await new le().setMeshoptDecoder(de).loadAsync("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb")).scene.children[0].geometry,v.computeVertexNormals(),d=new ne,d.add(e,"operation",{ADDITION:fe,SUBTRACTION:N,REVERSE_SUBTRACTION:ge,INTERSECTION:ce,DIFFERENCE:he,HOLLOW_INTERSECTION:R,HOLLOW_SUBTRACTION:W}).onChange(t=>{S=!0,t===R||t===W?m.forEach(l=>l.side=H):m.forEach(l=>l.side=I)}),d.add(e,"displayBrushes"),d.add(e,"displayControls"),d.add(e,"shadows"),d.add(e,"useGroups").onChange(()=>S=!0),d.add(e,"vertexColors").onChange(t=>{r.material.vertexColors=t,r.material.needsUpdate=!0,a.material.vertexColors=t,a.material.needsUpdate=!0,m.forEach(l=>{l.vertexColors=t,l.needsUpdate=!0}),b.attributes=t?["color","position","normal"]:["position","normal"],S=!0}),d.add(e,"gridTexture").onChange(t=>{m.forEach((l,j)=>{l.enableGrid=t,j.enableGrid=t})}),d.add(e,"flatShading").onChange(t=>{r.material.flatShading=t,r.material.needsUpdate=!0,a.material.flatShading=t,a.material.needsUpdate=!0,m.forEach(l=>{l.flatShading=t,l.needsUpdate=!0})});const i=d.addFolder("brush 1");i.add(e,"brush1Shape",["sphere","box","cylinder","torus","torus knot","mesh"]).name("shape").onChange(t=>{E(r,t,e.brush1Complexity),x.update()}),i.add(e,"brush1Complexity",0,2).name("complexity").onChange(t=>{E(r,e.brush1Shape,t),x.update()}),i.addColor(e,"brush1Color").onChange(t=>{r.material.color.set(t),m.get(r.material).color.set(t)});const s=d.addFolder("brush 2");s.add(e,"brush2Shape",["sphere","box","cylinder","torus","torus knot","mesh"]).name("shape").onChange(t=>{E(a,t,e.brush2Complexity),M.update()}),s.add(e,"brush2Complexity",0,2).name("complexity").onChange(t=>{E(a,e.brush2Shape,t),M.update()}),s.addColor(e,"brush2Color").onChange(t=>{a.material.color.set(t),m.get(a.material).color.set(t)});const y=d.addFolder("debug");y.add(e,"enableDebugTelemetry").onChange(()=>S=!0),y.add(e,"displayIntersectionEdges"),y.add(e,"displayTriangleIntersections"),y.add(e,"wireframe"),y.add(e,"displayBrush1BVH"),y.add(e,"displayBrush2BVH"),window.addEventListener("resize",function(){w.aspect=window.innerWidth/window.innerHeight,w.updateProjectionMatrix(),p.setSize(window.innerWidth,window.innerHeight)},!1),window.addEventListener("keydown",function(t){switch(t.code){case"KeyW":h.setMode("translate");break;case"KeyE":h.setMode("rotate");break;case"KeyR":h.setMode("scale");break}}),z()}function E(n,f,o){switch(n.geometry.dispose(),f){case"sphere":n.geometry=new oe(1,Math.round(C.lerp(5,32,o)),Math.round(C.lerp(5,16,o)));break;case"box":const s=Math.round(C.lerp(1,10,o));n.geometry=new O(1,1,1,s,s,s);break;case"cylinder":n.geometry=new re(.5,.5,1,Math.round(C.lerp(5,32,o)));break;case"torus":n.geometry=new te(.6,.2,Math.round(C.lerp(4,16,o)),Math.round(C.lerp(6,30,o)));break;case"torus knot":n.geometry=new ae(.6,.2,Math.round(C.lerp(16,64,o)),Math.round(C.lerp(4,16,o)));break;case"mesh":n.geometry=v.clone();break}n.geometry=n.geometry.toNonIndexed();const G=n.geometry.attributes.position,i=new Float32Array(G.count*3);for(let s=0,y=i.length;s<y;s+=9)i[s+0]=1,i[s+1]=0,i[s+2]=0,i[s+3]=0,i[s+4]=1,i[s+5]=0,i[s+6]=0,i[s+7]=0,i[s+8]=1;n.geometry.setAttribute("color",new se(i,3)),n.prepareGeometry(),S=!0}function z(){requestAnimationFrame(z),a.scale.x=Math.max(a.scale.x,.01),a.scale.y=Math.max(a.scale.y,.01),a.scale.z=Math.max(a.scale.z,.01);const n=e.enableDebugTelemetry;if(S){S=!1,r.updateMatrixWorld(),a.updateMatrixWorld();const f=window.performance.now();b.debug.enabled=n,b.useGroups=e.useGroups,b.evaluate(r,a,e.operation,g),e.useGroups?g.material=g.material.map(G=>m.get(G)):g.material=P;const o=window.performance.now()-f;V.innerText=`${o.toFixed(3)}ms`,n&&(T.setEdges(b.debug.intersectionEdges),B.setTriangles([...b.debug.triangleIntersectsA.getTrianglesAsArray(),...b.debug.triangleIntersectsA.getIntersectionsAsArray()]))}A.visible=e.wireframe,r.visible=e.displayBrushes,a.visible=e.displayBrushes,c.castShadow=e.shadows,h.enabled=e.displayControls,h.visible=e.displayControls,T.visible=n&&e.displayIntersectionEdges,B.visible=n&&e.displayTriangleIntersections,x.visible=e.displayBrush1BVH,M.visible=e.displayBrush2BVH,p.render(u,w)}
